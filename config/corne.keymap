/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };

        leftparenteses {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        leftanglebracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 29>;
        };

        leftcurlybracket {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <1 2>;
        };

        rightcurlybrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <6 7>;
        };

        leftnormalbrace {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        rightanglebracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };

        arow {
            bindings = <&kp EQUAL>;
            key-positions = <37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mo 1      &kp Q  &kp W  &kp E    &kp R           &kp T          &kp Y        &kp U          &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D    &kp F           &kp G          &kp H        &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C    &kp V           &kp B          &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp TAB  &kp LEFT_SHIFT  &lt 2 ENTER    &lt 1 SPACE  &kp BACKSPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none   &kp N7        &kp N8        &kp N9        &kt PLUS        &kp BACKSPACE  &kp AMPERSAND  &kp STAR     &kp LEFT_BRACE  &none   &none
&none  &none   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kt KP_EQUAL    &kp BACKSLASH  &kp DOLLAR     &kp PERCENT  &kp CARET       &trans  &trans
&none  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt MINUS       &kt UNDER      &kt EXCL       &kt AT       &kp HASH        &trans  &trans
                             &none         &kt N0        &kp SPACE       &kp RET        &trans         &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9  &none        &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp BSPC
&none  &kp F11  &kp F4  &kp F5  &kp F6  &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT     &kp BSLH      &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &trans       &none           &none           &none         &none         &none         &none
                        &none   &trans  &kp SPACE    &kp RET         &trans          &none
            >;
        };
    };
};
